<?php

namespace App\Utils;

use Illuminate\Support\Facades\Config;

class ConfigFilePersistence
{

    public static function persist($config = 'roles')
    {
        $comment = "/** \n * This file was automatically generated by App\Utils\ConfigFilePersistence.\n */";
        $string = trim("<?php\n\n". $comment ."\n\nreturn [\n" . self::toArray($config)) . "\n];\n";
        file_put_contents(self::path($config), $string);
    }

    public static function read($config = 'roles')
    {
        if (file_exists(self::path($config)) && is_readable(self::path($config))) {
            Config::set($config, require self::path($config));
        }
        return Config::get($config);
    }

    private static function path($config = '')
    {
        return base_path() . "/" . 'config/'. $config .'.php';
    }

    /**
     * @param bool|string|array $array
     * @param $tabs
     * @return string
     */
    private static function toArray($array = false, $tabs = 1)
    {
        $string = "";
        if (!$array || !is_array($array)) {
            $array = Config::get($array);
        }
        $count = 0;
        foreach ($array as $key => $value) {
            if (is_array($value)) {
                $string .= str_repeat("\t", $tabs) . "\"" . $key . "\" => [\n" . self::toArray($value, ($tabs + 1)) . str_repeat("\t", $tabs) . "]" . ($count < count($array) ? "," : "") . "\n";
            } else {
                $string .= str_repeat("\t", $tabs) . (is_numeric($key) ? ($key . " => " . (is_numeric($value) ? $value : "\"" . $value . "\"")) : ("\"$key\" => " . (is_numeric($value) ? $value : "\"" . $value . "\""))) . ($count < count($array) ? "," : "") . "\n";
            }
            $count++;
        }
        return $string;
    }
}
